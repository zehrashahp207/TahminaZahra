class Mehsul:
    def __init__(self, ad, qiymet, say):
        self.ad = ad
        self.qiymet = qiymet
        self.say = say

    def __str__(self):
        return f"{self.ad} - {self.qiymet} AZN - {self.say} ədəd"
        
class Magaza:
    def __init__(self):
        self.mehsullar = []
        
    def mehsul_elaveet(self, ad, qiymet, say):
        self.mehsullar.append(Mehsul(ad, qiymet, say))
        
    def mehsullari_goster(self):
        if len(self.mehsullar) == 0:
            print("Magazada mehsul yoxdur.")
        else:
            for i, p in enumerate(self.mehsullar, 1):
                print(f"[{i}] {p}")
                
    def mehsul_sil(self, index):
        if 0 <= index < len(self.mehsullar):
            removed = self.mehsullar.pop(index)
            print(f"{removed.ad} silindi.")
        else:
            print("Yanlis nomre!")
            
magaza = Magaza()

while True:
    print("""
    Magaza:
    1. Mehsul elave et
    2. Mehsullari goster
    3. Mehsul sil
    0. Cixis
    """)
    secim = input("Secminizi daxil edin:")
    
    if secim == "0":
        print("Cixilir...")
        break
    
    elif secim == "1":
        ad = input("Mehsul adi: ")
        try:
            qiymet = float(input("Qiymet(AZN): "))
            say = int(input("Miqdae: "))
        except:
                print("Qiymet ve ya miqdar duzgun deyil!")
                continue
        magaza.mehsul_elaveet(ad, qiymet, say)
        print("Mehsul elave edildi.")
            
    elif secim == "2":
            magaza.mehsullari_goster()
            
    elif secim == "3":
        try:
            nomre = int(input("Silinecek mehsulun nomresi: ")) - 1
        except:
            print("Duzgun nomre daxil edin!")
            continue
        magaza.mehsul_sil(nomre)
        
    else:
            print("Yanlis secim!")
            
